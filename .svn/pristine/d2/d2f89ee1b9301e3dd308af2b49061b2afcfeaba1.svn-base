//
//  VPNMessageViewController.m
//  loginIn
//
//  Created by jumpapp1 on 16/3/4.
//  Copyright © 2016年 jumpapp1. All rights reserved.
//

#import "VPNMessageViewController.h"
#import "ViewController.h"
#import "MessageCell.h"
#import "VPNStatus.h"
#import "Masonry.h"
#import "MJRefresh.h"

@interface VPNMessageViewController ()<UITableViewDataSource,UITableViewDelegate,UIAlertViewDelegate>

@property (nonatomic) UITableView *tableView;
@property (nonatomic) UIAlertView *alertView;
@property (nonatomic) NSMutableArray *dataArray;
@property (nonatomic) NSMutableArray *deleteArray;
@property (nonatomic) UILabel *label;
@property (nonatomic) NSMutableArray *arr;
@property (nonatomic) NSMutableArray *passArr;
@property (nonatomic) NSMutableArray *passAgArr;
@property (nonatomic) NSMutableArray *array;
@property (nonatomic) CGFloat fHeight;

@end

@implementation VPNMessageViewController
- (NSMutableArray *)dataArray{
    if (_dataArray == nil) {
        _dataArray = [[NSMutableArray alloc] init];
    }
    return _dataArray;
}
- (NSMutableArray *)deleteArray{
    if (_deleteArray == nil) {
        _deleteArray = [[NSMutableArray alloc] init];
    }
    return _deleteArray;
}
- (NSMutableArray *)arr{
    if (_arr == nil) {
        _arr = [[NSMutableArray alloc] init];
    }
    return _arr;
}
- (NSMutableArray *)passArr{
    if (_passArr == nil) {
        _passArr = [[NSMutableArray alloc] init];
    }
    return _passArr;
}
- (NSMutableArray *)passAgArr{
    if (_passAgArr == nil) {
        _passAgArr = [[NSMutableArray alloc] init];
    }
    return _passAgArr;
}
- (NSMutableArray *)array{
    if (_array == nil) {
        _array = [[NSMutableArray alloc] init];
    }
    return _array;
}
- (void)viewDidLoad{
    [super viewDidLoad];
    self.view.backgroundColor = BACKGROUNDColor;
    [self createTableView];
    //[self addEditButton];
    //[self addDeleteButton];
}
- (void)addEditButton{
    UIButton *button = [UIButton buttonWithType:UIButtonTypeSystem];
    button.frame = CGRectMake(0, 0, 35, 35);
    //[button setTitle:@"编辑" forState:UIControlStateNormal];
    [button setTitle:@"完成" forState:UIControlStateSelected];
    [button addTarget:self action:@selector(edit:) forControlEvents:UIControlEventTouchUpInside];
    button.tintColor = [UIColor clearColor];
    //[button setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
    [button setTitleColor:[UIColor redColor] forState:UIControlStateSelected];
    UIBarButtonItem *item = [[UIBarButtonItem alloc] initWithCustomView:button];
    self.navigationItem.rightBarButtonItem = item;
}
- (void)edit:(UIButton *)button{
    button.selected = !button.selected;
    if (button.selected) {
        [self.tableView setEditing:NO animated:YES];
    }else{
        [self.tableView setEditing:NO animated:YES];
    }
    //    button.selected = !button.selected;
    //    if (button.selected) {
    //        [self.tableView setEditing:YES animated:YES];
    //    }else{
    //        [self.tableView setEditing:NO animated:YES];
    //    }
}
- (void)addDeleteButton{
    UIButton *deleteButton = [UIButton buttonWithType:UIButtonTypeSystem];
    deleteButton.frame = CGRectMake(0, 0, 35, 35);
    [deleteButton setTitle:@"删除" forState:UIControlStateNormal];
    [deleteButton addTarget:self action:@selector(delete:) forControlEvents:UIControlEventTouchUpInside];
    deleteButton.tintColor = [UIColor clearColor];
    [deleteButton setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
    UIBarButtonItem *item = [[UIBarButtonItem alloc] initWithCustomView:deleteButton];
    self.navigationItem.leftBarButtonItem = item;
}
- (void)delete:(UIButton *)button{
    NSLog(@"%ld",self.deleteArray.count);
    NSInteger num = self.deleteArray.count;
    [self.dataArray removeObjectsInArray:self.deleteArray];
    [_arr removeObjectsInArray:_array];
    [VPNStatus shareInstance].contextArr = _arr;
    //    for (NSInteger i = 0; i < self.dataArray.count; i++) {
    //        [self.dataArray removeObjectsInArray:self.deleteArray];
    //    }
    [self.deleteArray removeAllObjects];
    [UIView animateWithDuration:0.25 animations:^{
        [self.tableView reloadData];
    }];
    if (num != 0) {
        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:nil message:@"短消息已成功删除" delegate:nil cancelButtonTitle:nil otherButtonTitles:nil, nil];
        [alertView show];
        [self performSelector:@selector(dismissAlertView:) withObject:alertView afterDelay:1.0];
    }
    if (self.dataArray.count == 0) {
        sleep(1);
        _label.text = @"对不起!暂未查询到数据";
        _label.textAlignment = NSTextAlignmentCenter;
        _label.font = [UIFont boldSystemFontOfSize:15.0];
        [self.view addSubview:_label];
        [_label mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.view).with.offset(10);
            make.right.equalTo(self.view).with.offset(-10);
            make.top.equalTo(self.view).with.offset(64);
            make.bottom.equalTo(self.view).with.offset(-44);
        }];
    }
}
- (void)dismissAlertView:(UIAlertView *)alertView{
    [alertView dismissWithClickedButtonIndex:0 animated:YES];
}
- (void)createTableView{
    self.tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.backgroundColor = [UIColor clearColor];
    _tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];//去掉多余分割线
    [_tableView registerClass:[MessageCell class] forCellReuseIdentifier:@"cellID"];
    _tableView.rowHeight = 50;
    [self.view addSubview:_tableView];
    self.label = [[UILabel alloc] init];
    _label.text = @" ";
    _tableView.tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 5, 10)];

    self.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewData)];
    [self.tableView.mj_header beginRefreshing];
}
- (void)loadNewData{
    _arr = [VPNStatus shareInstance].contextArr;//通过单例把在viewController中解析的数据传过来
    NSLog(@"%@",_arr);
    _passAgArr = [NSMutableArray arrayWithArray:_arr];
    NSLog(@"%@",_passAgArr);
    //self.passArr = [NSMutableArray arrayWithArray:_arr];
    NSLog(@"%@",_passArr);
    //当有新数据添加进来时，排除已在页面显示的数据
    for (NSInteger i = 0; i < _passArr.count; i++) {
        NSLog(@"%ld",i);
        [_passAgArr removeObjectAtIndex:0];
        NSLog(@"%@",_passAgArr);
    }
    NSLog(@"%@",_passAgArr);
    //根据传过来的数据组成model，把model存到dataArray中
    for (NSInteger i = 0; i < _passAgArr.count; i++) {
        MessageModel *model = [[MessageModel alloc] init];
        //_passArr = [VPNStatus shareInstance].contextArr;
        model.msg = _passAgArr[i];
        NSLog(@"%@",model.msg);
        NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
        [formatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
        NSString *currentTime = [formatter stringFromDate:[NSDate date]];
        model.time = currentTime;
        model.icon = [UIImage imageNamed:@"message.png"];
        [self.dataArray addObject:model];
        NSLog(@"%@",self.dataArray);
        [self.tableView reloadData];
    }
    _passArr = [VPNStatus shareInstance].contextArr;
    NSLog(@"%@",_passArr);
    //如果dataArray为空，显示提示消息
    if (self.dataArray.count == 0 && [_label.text isEqualToString:@" "]) {
        //label.backgroundColor = [UIColor greenColor];
        _label.text = @"对不起!暂未查询到数据";
        _label.textAlignment = NSTextAlignmentCenter;
        _label.font = [UIFont systemFontOfSize:15.0];
        [self.view addSubview:_label];
        [_label mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.view).with.offset(10);
            make.right.equalTo(self.view).with.offset(-10);
            make.top.equalTo(self.view).with.offset(64);
            make.bottom.equalTo(self.view).with.offset(-44);
        }];
    }else if(self.dataArray.count != 0){
        _label.text = @" ";
    }
    [self.tableView reloadData];
    [self.tableView.mj_header endRefreshing];
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return _dataArray.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    MessageCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cellID" forIndexPath:indexPath];
    //    [cell.layer setMasksToBounds:YES];
    //    cell.layer.cornerRadius = 15;
    MessageModel *model = self.dataArray[indexPath.row];
    [cell refreshWithModel:model];
    return cell;
}
- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath{
    return UITableViewCellEditingStyleDelete | UITableViewCellEditingStyleInsert;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    //当点击时，会出现弹框，显示短消息的详细内容
    MessageModel *model = self.dataArray[indexPath.row];
    self.array = [[NSMutableArray alloc] init];
    [_array addObject:model.msg];
    NSLog(@"%@",model);
    [self.deleteArray addObject:model];
    NSString *str = model.msg;
    NSString *str1 = model.time;
    self.alertView = [[UIAlertView alloc] initWithTitle:str1 message:str delegate:self cancelButtonTitle:@"返回" otherButtonTitles:@"删除", nil];
    [_alertView show];
    NSLog(@"%ld",self.deleteArray.count);
}
- (void)tableView:(UITableView *)tableView didDeselectRowAtIndexPath:(NSIndexPath *)indexPath{
    MessageModel *model = self.dataArray[indexPath.row];
    [self.deleteArray removeObject:model];
    [_array removeObject:model.msg];
}
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    //[_alertView dismissWithClickedButtonIndex:0 animated:YES];
    //当点击弹框中的删除按钮时，删除选中的这一行，刷新tableView
    if (buttonIndex == 1) {
        NSInteger num = self.deleteArray.count;
        [self.dataArray removeObjectsInArray:self.deleteArray];
        [UIView animateWithDuration:0.25 animations:^{
            [self.tableView reloadData];
        }];
        if (num != 0) {
            UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:nil message:@"短消息已成功删除" delegate:nil cancelButtonTitle:nil otherButtonTitles:nil, nil];
            [alertView show];
            [self performSelector:@selector(dismissAlertView:) withObject:alertView afterDelay:1.0];
        }
        if (self.dataArray.count == 0) {
            _label.text = @"对不起!暂未查询到数据";
            _label.textAlignment = NSTextAlignmentCenter;
            _label.font = [UIFont systemFontOfSize:15.0];
            [self.view addSubview:_label];
            [_label mas_makeConstraints:^(MASConstraintMaker *make) {
                make.left.equalTo(self.view).with.offset(10);
                make.right.equalTo(self.view).with.offset(-10);
                make.top.equalTo(self.view).with.offset(64);
                make.bottom.equalTo(self.view).with.offset(-44);
            }];
        }
        //当点击取消按钮时，清空deleteArray中的数据，即选中的那一行
    }else{
        self.deleteArray = nil;
    }
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
